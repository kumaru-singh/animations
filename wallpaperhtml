<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3D Wallpaper</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
</head>
<body style="margin: 0; overflow: hidden; background-color: black;">
    <script>
        let scene, camera, renderer;
        let cubes = [];

        function init() {
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.z = 5;

            renderer = new THREE.WebGLRenderer({ antialias: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.body.appendChild(renderer.domElement);

            const light = new THREE.PointLight(0xffffff, 1.5, 500);
            light.position.set(2, 2, 5);
            scene.add(light);

            const ambientLight = new THREE.AmbientLight(0x404040);
            scene.add(ambientLight);

            for (let i = 0; i < 50; i++) {
                let geometry = new THREE.BoxGeometry(Math.random() * 0.5 + 0.2, Math.random() * 0.5 + 0.2, Math.random() * 0.5 + 0.2);
                let material = new THREE.MeshStandardMaterial({ color: new THREE.Color(Math.random(), Math.random(), Math.random()) });
                let cube = new THREE.Mesh(geometry, material);
                cube.position.set((Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10);
                scene.add(cube);
                cubes.push(cube);
            }

            animate();
        }

        function animate() {
            requestAnimationFrame(animate);
            cubes.forEach(cube => {
                cube.rotation.x += 0.1;
                cube.rotation.y += 0.1;
                cube.rotation.z += 0.1;
                cube.position.y += Math.sin(Date.now() * 0.001) * 0.0002;
            });
            renderer.render(scene, camera);
        }

        window.addEventListener("resize", () => {
            renderer.setSize(window.innerWidth, window.innerHeight);
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
        });

        init();
    </script>
</body>
</html>
